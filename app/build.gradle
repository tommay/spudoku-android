apply plugin: 'com.android.application'

repositories {
   jcenter()
   google()
}

android {
    compileSdkVersion 26
    // This is no longer necessary.  Each version of the Android Gradle
    // Plugin now has a default version of the build tools.
    // buildToolsVersion "25.0.0"

    // If buildConfigField CREATE_LOG is non-null then puzzle creation times
    // will be logged to /data/data/net.tommay.spudoku/files/<CREATE_LOG>,
    // and PuzzleSupplier.java will use the same random number seed so times
    // will be consistent.

    defaultConfig {
        // These go into fields in the generated  BuildConfig java class:
        applicationId "net.tommay.spudoku"
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "CREATE_LOG", "null"

        minSdkVersion 15
        targetSdkVersion 26

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        // These things become gradle tasks "assembleDev", etc.
        // The minify stuff can't go in defaultConfig because the
        // minifyEnabled method isn't available there.
        dev {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Create puzzles with a consistent seed and log create times to
            // /data/data/net.tommay.spudoku/files/create.log.
            buildConfigField "String", "CREATE_LOG", '"create.log"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Build either the scala glue code or the frege glue code that provides
    // the java dode a uniform API to the scala/frege code.  This is the
    // only way I could figure out how to do this, by putting it in its own
    // directory tree and coditionally adding the tree to the main java
    // sourceSet.

    sourceSets {
        main {
            if (project.hasProperty("frege")) {
                java.srcDirs += "glue/frege"
            }
            else {
                java.srcDirs += "glue/scala"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:25.0.0'
    testImplementation 'junit:junit:4.12'
}

// The sudoku Puzzle create etc code is a separate scala or frege project.

dependencies {
    if (project.hasProperty("frege")) {
        implementation project(':frege')
    }
    else {
        implementation project(':scala')
    }
}
