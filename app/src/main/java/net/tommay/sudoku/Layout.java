/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  Œ± Œ≤ Œ≥ Œ¥ Œµ Œ∂ Œ∑ Œ∏ Œπ Œ∫ Œª Œº ŒΩ Œæ Œø œÄ œÅ œÇ œÉ œÑ œÖ œÜ œá œà œâ ¬´ ‚Ä¢ ¬¶ ¬ª ‚àÄ ‚àÉ ‚à∑ ‚Ä¶ ‚Üí ‚Üê Ô¨Å Ô¨Ç ∆í
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.24.141
  from ./net/tommay/sudoku/Layout.fr Do not edit this file! Instead, edit the source file and recompile.
*/

package net.tommay.sudoku;

import frege.run7.Func;
import frege.run7.Lazy;
import frege.run7.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import frege.Prelude;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.data.Bits;
import frege.data.Foldable;
import frege.data.HashMap;
import frege.data.Iterators;
import frege.data.JSON;
import frege.data.List;
import frege.data.MicroParsec;
import frege.data.Monoid;
import frege.data.Traversable;
import frege.data.wrapper.Const;
import frege.data.wrapper.Dual;
import frege.data.wrapper.Endo;
import frege.data.wrapper.Identity;
import frege.data.wrapper.Num;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.lib.PP;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="./net/tommay/sudoku/Layout.fr", time=1481937166702L, jmajor=1, jminor=7,
  imps={
    "frege.data.HashMap", "frege.Prelude", "frege.prelude.PreludeArrays", "frege.prelude.PreludeBase",
    "frege.prelude.PreludeIO", "frege.prelude.PreludeList", "frege.prelude.PreludeMonad", "frege.prelude.PreludeText",
    "frege.java.util.Regex"
  },
  nmss={
    "Map", "Prelude", "PreludeArrays", "PreludeBase", "PreludeIO", "PreludeList", "PreludeMonad",
    "PreludeText", "Regexp"
  },
  symas={
    @Meta.SymA(offset=81, name=@Meta.QName(kind=0, pack="net.tommay.sudoku.Layout", base="Map"), vars={}, typ=0, kind=1)
  },
  symcs={}, symis={}, symts={},
  symvs={
    @Meta.SymV(
      offset=2778, name=@Meta.QName(pack="net.tommay.sudoku.Layout", base="getLayoutStrings"), stri="u",
      sig=1, depth=0, rkind=36
    ),
    @Meta.SymV(
      offset=2466, name=@Meta.QName(pack="net.tommay.sudoku.Layout", base="getLayout"), stri="s(s)",
      sig=3, depth=1, rkind=49
    )
  },
  symls={},
  taus={
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.data.HashMap", base="HashMap")}), @Meta.Tau(kind=9),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}),
    @Meta.Tau(kind=0, suba=3, subb=4), @Meta.Tau(kind=0, suba=2, subb=5),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Maybe")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}),
    @Meta.Tau(kind=0, suba=2, subb=8), @Meta.Tau(kind=0, suba=2, subb=9), @Meta.Tau(kind=0, suba=7, subb=10)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=0), @Meta.Rho(rhofun=false, rhotau=6), @Meta.Rho(rhofun=false, rhotau=5),
    @Meta.Rho(rhofun=false, rhotau=11), @Meta.Rho(sigma=2, rhotau=3)
  },
  sigmas={@Meta.Sigma(rho=0), @Meta.Sigma(rho=1), @Meta.Sigma(rho=2), @Meta.Sigma(rho=4)}, exprs={@Meta.Expr()}
)
final public class Layout  {
  




final public static <ùìê, ùìë> PreludeBase.TList<ùìê> uniqBy(
  final PreludeBase.COrd<ùìë> ctx$1, final Func.U<ùìê, ùìë> arg$1, final PreludeBase.TList<ùìê> arg$2
) {
  final class Let$10264  {
    final Let$10264 let$10264 = this;
    final public PreludeBase.TList<PreludeBase.TTuple2<ùìë, ùìê>> $lc1002$9659(final PreludeBase.TList<ùìê> arg$3) {
      final PreludeBase.TList.DCons<ùìê> $10265 = arg$3.asCons();
      if ($10265 != null) {
        return PreludeBase.<PreludeBase.TTuple2<ùìë, ùìê>>$excl$colon(
                  PreludeBase.TTuple2.<ùìë, ùìê>mk(
                        Thunk.<ùìë>nested(new Lazy.D<Lazy<ùìë>>() {public Lazy<ùìë> call() {return arg$1.apply($10265.mem1);}}),
                        $10265.mem1
                      ),
                  Thunk.<PreludeBase.TList<PreludeBase.TTuple2<ùìë, ùìê>>>shared(
                        new Lazy.D<PreludeBase.TList<PreludeBase.TTuple2<ùìë, ùìê>>>() {
                          public PreludeBase.TList<PreludeBase.TTuple2<ùìë, ùìê>> call() {
                            return let$10264.$lc1002$9659($10265.mem2.call());
                          }
                        }
                      )
                );
      }
      final PreludeBase.TList.DList<ùìê> $10266 = arg$3.asList();
      assert $10266 != null;
      return PreludeBase.TList.DList.<PreludeBase.TTuple2<ùìë, ùìê>>mk();
    }
  }
  final Let$10264 let$10264 = new Let$10264();
  return HashMap.<ùìë, ùìê>values(HashMap.<ùìê, ùìë>fromList(ctx$1, let$10264.$lc1002$9659(arg$2)));
}
final public static <ùìê> PreludeBase.TList<ùìê> uniq(final PreludeBase.COrd<ùìê> ctx$1, final PreludeBase.TList<ùìê> arg$1) {
  return Layout.<ùìê, ùìê>uniqBy(
            ctx$1,
            new Func.U.D<ùìê, ùìê>() {
              public Lazy<ùìê> apply(final Lazy<ùìê> arg$10267) {
                final ùìê v2321$10215 = arg$10267.call();
                return Thunk.<ùìê>lazy(v2321$10215);
              }
            },
            arg$1
          );
}
final public static String/*<Character>*/ toLower(final String/*<Character>*/ arg$1) {
  return arg$1.toLowerCase();
}
final public static PreludeBase.TTuple2<Integer, Integer> rowcol(final Lazy<Integer> arg$1) {
  return PreludeBase.TTuple2.<Integer, Integer>mk(
            Thunk.<Integer>shared(
                  new Lazy.D<Integer>() {
                    public Integer call() {
                      return PreludeBase.IIntegral_Int.div((int)arg$1.call(), 9);
                    }
                  }
                ),
            Thunk.<Integer>shared(
                  new Lazy.D<Integer>() {
                    public Integer call() {
                      return PreludeBase.IIntegral_Int.mod((int)arg$1.call(), 9);
                    }
                  }
                )
          );
}
final public static PreludeBase.TList<Integer> wtf2(final Lazy<Integer> arg$1) {
  final Lazy<PreludeBase.TTuple2<Integer, Integer>> gen$2304$9638 = Thunk.<PreludeBase.TTuple2<Integer, Integer>>shared(
        new Lazy.D<PreludeBase.TTuple2<Integer, Integer>>() {
          public PreludeBase.TTuple2<Integer, Integer> call() {
            return Layout.rowcol(
                      Thunk.<Integer>shared(new Lazy.D<Integer>() {public Integer call() {return 80 - (int)arg$1.call();}})
                    );
          }
        }
      );
  final Lazy<Integer> col$9640 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final PreludeBase.TTuple2<Integer, Integer> $10269 = gen$2304$9638.call();
            final int col$9646 = (int)$10269.mem2.call();
            return col$9646;
          }
        }
      );
  final Lazy<Integer> row$9639 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final PreludeBase.TTuple2<Integer, Integer> $10271 = gen$2304$9638.call();
            final int row$9643 = (int)$10271.mem1.call();
            return row$9643;
          }
        }
      );
  return PreludeBase.TList.DCons.<Integer>mk(
            arg$1,
            PreludeBase.TList.DCons.<Integer>mk(
                  Thunk.<Integer>shared(
                        new Lazy.D<Integer>() {
                          public Integer call() {
                            return ((int)col$9640.call() * 9) + (int)row$9639.call();
                          }
                        }
                      ),
                  PreludeBase.TList.DList.<Integer>mk()
                )
          );
}
final public static PreludeBase.TList<Integer> wtf(final Lazy<Integer> arg$1) {
  final Lazy<PreludeBase.TTuple2<Integer, Integer>> gen$2164$9628 = Thunk.<PreludeBase.TTuple2<Integer, Integer>>shared(
        new Lazy.D<PreludeBase.TTuple2<Integer, Integer>>() {
          public PreludeBase.TTuple2<Integer, Integer> call() {
            return Layout.rowcol(arg$1);
          }
        }
      );
  final Lazy<Integer> col$9630 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final PreludeBase.TTuple2<Integer, Integer> $10273 = gen$2164$9628.call();
            final int col$9636 = (int)$10273.mem2.call();
            return col$9636;
          }
        }
      );
  final Lazy<Integer> row$9629 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final PreludeBase.TTuple2<Integer, Integer> $10275 = gen$2164$9628.call();
            final int row$9633 = (int)$10275.mem1.call();
            return row$9633;
          }
        }
      );
  return PreludeBase.TList.DCons.<Integer>mk(
            arg$1,
            PreludeBase.TList.DCons.<Integer>mk(
                  Thunk.<Integer>shared(
                        new Lazy.D<Integer>() {
                          public Integer call() {
                            return ((8 - (int)col$9630.call()) * 9) + (int)row$9629.call();
                          }
                        }
                      ),
                  PreludeBase.TList.DList.<Integer>mk()
                )
          );
}
final public static PreludeBase.TList<Integer> spinny$tick(Lazy<Integer> arg$1, PreludeBase.TList<Integer> arg$2) {
  tailrecursion: while (true) {
    final Lazy<Integer> arg$1f = arg$1;
    final PreludeBase.TList<Integer> arg$2f = arg$2;
    if (PreludeList.<Integer>elem(PreludeBase.IEq_Int.it, arg$1f, arg$2f)) {
      return arg$2f;
    }
    else {
      final PreludeBase.TTuple2<Integer, Integer> gen$1381$9594 = Layout.rowcol(arg$1f);
      final Lazy<Integer> col$9596 = Thunk.<Integer>shared(
            new Lazy.D<Integer>() {
              public Integer call() {
                final int col$9602 = (int)gen$1381$9594.mem2.call();
                return col$9602;
              }
            }
          );
      final Lazy<Integer> row$9595 = Thunk.<Integer>shared(
            new Lazy.D<Integer>() {
              public Integer call() {
                final int row$9599 = (int)gen$1381$9594.mem1.call();
                return row$9599;
              }
            }
          );
      arg$1 = Thunk.<Integer>shared(
            new Lazy.D<Integer>() {
              public Integer call() {
                return ((int)col$9596.call() * 9) + (8 - (int)row$9595.call());
              }
            }
          );
      arg$2 = PreludeBase.TList.DCons.<Integer>mk(arg$1f, arg$2f);
      continue tailrecursion;
    }
  }
}
final public static PreludeBase.TList<Integer> spinny(final Lazy<Integer> arg$1) {
  return Layout.spinny$tick(arg$1, PreludeBase.TList.DList.<Integer>mk());
}
final public static int reflectUpDown(final int arg$1) {
  final PreludeBase.TTuple2<Integer, Integer> gen$758$9577 = Layout.rowcol(Thunk.<Integer>lazy(arg$1));
  final Lazy<Integer> row$9578 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final int row$9581 = (int)gen$758$9577.mem1.call();
            return row$9581;
          }
        }
      );
  final Lazy<Integer> rowish$9580 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            return (int)row$9578.call() * 9;
          }
        }
      );
  return ((arg$1 - (int)rowish$9580.call()) + 72) - (int)rowish$9580.call();
}
final public static int reflectLeftRight(final int arg$1) {
  final PreludeBase.TTuple2<Integer, Integer> gen$561$9568 = Layout.rowcol(Thunk.<Integer>lazy(arg$1));
  final Lazy<Integer> col$9570 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final int col$9574 = (int)gen$561$9568.mem2.call();
            return col$9574;
          }
        }
      );
  return ((arg$1 - (int)col$9570.call()) + 8) - (int)col$9570.call();
}
final public static int reflectDiagonally$tick(final Lazy<Integer> arg$1) {
  final PreludeBase.TTuple2<Integer, Integer> gen$1871$9616 = Layout.rowcol(arg$1);
  final Lazy<Integer> col$9618 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final int col$9624 = (int)gen$1871$9616.mem2.call();
            return col$9624;
          }
        }
      );
  final Lazy<Integer> row$9617 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final int row$9621 = (int)gen$1871$9616.mem1.call();
            return row$9621;
          }
        }
      );
  return ((8 - (int)col$9618.call()) * 9) + (8 - (int)row$9617.call());
}
final public static int reflectDiagonally(final Lazy<Integer> arg$1) {
  final PreludeBase.TTuple2<Integer, Integer> gen$1632$9605 = Layout.rowcol(arg$1);
  final Lazy<Integer> col$9607 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final int col$9613 = (int)gen$1632$9605.mem2.call();
            return col$9613;
          }
        }
      );
  final Lazy<Integer> row$9606 = Thunk.<Integer>shared(
        new Lazy.D<Integer>() {
          public Integer call() {
            final int row$9610 = (int)gen$1632$9605.mem1.call();
            return row$9610;
          }
        }
      );
  return ((int)col$9607.call() * 9) + (int)row$9606.call();
}
final public static PreludeBase.TList<Integer> random(final Lazy<Integer> arg$1) {
  return PreludeBase.TList.DCons.<Integer>mk(arg$1, PreludeBase.TList.DList.<Integer>mk());
}
final public static PreludeBase.TList<Integer> leftRight(final Lazy<Integer> arg$1) {
  return PreludeBase.TList.DCons.<Integer>mk(
            arg$1,
            PreludeBase.TList.DCons.<Integer>mk(
                  Thunk.<Integer>shared(
                        new Lazy.D<Integer>() {
                          public Integer call() {
                            return Layout.reflectLeftRight((int)arg$1.call());
                          }
                        }
                      ),
                  PreludeBase.TList.DList.<Integer>mk()
                )
          );
}
final public static PreludeBase.TList<Integer> leftRightUpDown(final Lazy<Integer> arg$1) {
  final PreludeBase.TList<Integer> leftRightSets$9586 = Layout.leftRight(arg$1);
  return PreludeList.IListMonoid_$lbrack$rbrack.<Integer>$plus$plus(
            leftRightSets$9586,
            Thunk.<PreludeBase.TList<Integer>>shared(
                  new Lazy.D<PreludeBase.TList<Integer>>() {
                    public PreludeBase.TList<Integer> call() {
                      return PreludeList.<Integer, Integer>map(
                                new Func.U.D<Integer, Integer>() {
                                  public Lazy<Integer> apply(final Lazy<Integer> Œ∑$10291) {
                                    return Thunk.<Integer>shared(
                                              new Lazy.D<Integer>() {
                                                public Integer call() {
                                                  return Layout.reflectUpDown((int)Œ∑$10291.call());
                                                }
                                              }
                                            );
                                  }
                                },
                                leftRightSets$9586
                              );
                    }
                  }
                )
          );
}
final public static PreludeBase.TList<Integer> identicalSquares(final int arg$1) {
  return PreludeList.<Integer, Integer>map(
            new Func.U.D<Integer, Integer>() {
              public Lazy<Integer> apply(final Lazy<Integer> Œ∑$10292) {
                return Thunk.<Integer>shared(
                          new Lazy.D<Integer>() {
                            public Integer call() {
                              return ((PreludeBase.IIntegral_Int.mod(
                                        PreludeBase.IIntegral_Int.div(arg$1, 9), 3
                                      ) * 9) + PreludeBase.IIntegral_Int.mod(arg$1, 3)) + (int)Œ∑$10292
                                  .call();
                            }
                          }
                        );
              }
            },
            PreludeBase.TList.DCons.<Integer>mk(
                  Thunk.<Integer>lazy(0),
                  PreludeBase.TList.DCons.<Integer>mk(
                        Thunk.<Integer>lazy(3),
                        PreludeBase.TList.DCons.<Integer>mk(
                              Thunk.<Integer>lazy(6),
                              PreludeBase.TList.DCons.<Integer>mk(
                                    Thunk.<Integer>lazy(27),
                                    PreludeBase.TList.DCons.<Integer>mk(
                                          Thunk.<Integer>lazy(30),
                                          PreludeBase.TList.DCons.<Integer>mk(
                                                Thunk.<Integer>lazy(33),
                                                PreludeBase.TList.DCons.<Integer>mk(
                                                      Thunk.<Integer>lazy(54),
                                                      PreludeBase.TList.DCons.<Integer>mk(
                                                            Thunk.<Integer>lazy(57),
                                                            PreludeBase.TList.DCons.<Integer>mk(
                                                                  Thunk.<Integer>lazy(60), PreludeBase.TList.DList.<Integer>mk()
                                                                )
                                                          )
                                                    )
                                              )
                                        )
                                  )
                            )
                      )
                )
          );
}
final public static PreludeBase.TList<Integer> diagonal(final Lazy<Integer> arg$1) {
  return PreludeBase.TList.DCons.<Integer>mk(
            arg$1,
            PreludeBase.TList.DCons.<Integer>mk(
                  Thunk.<Integer>shared(
                        new Lazy.D<Integer>() {
                          public Integer call() {
                            return Layout.reflectDiagonally(arg$1);
                          }
                        }
                      ),
                  PreludeBase.TList.DList.<Integer>mk()
                )
          );
}
final public static PreludeBase.TList<Integer> doubleDiagonal(final Lazy<Integer> arg$1) {
  final PreludeBase.TList<Integer> diagonalSets$9626 = Layout.diagonal(arg$1);
  return PreludeList.IListMonoid_$lbrack$rbrack.<Integer>$plus$plus(
            diagonalSets$9626,
            Thunk.<PreludeBase.TList<Integer>>shared(
                  new Lazy.D<PreludeBase.TList<Integer>>() {
                    public PreludeBase.TList<Integer> call() {
                      return PreludeList.<Integer, Integer>map(
                                new Func.U.D<Integer, Integer>() {
                                  public Lazy<Integer> apply(final Lazy<Integer> Œ∑$10294) {
                                    return Thunk.<Integer>shared(
                                              new Lazy.D<Integer>() {
                                                public Integer call() {
                                                  return Layout.reflectDiagonally$tick(
                                                            Œ∑$10294
                                                          );
                                                }
                                              }
                                            );
                                  }
                                },
                                diagonalSets$9626
                              );
                    }
                  }
                )
          );
}
final public static PreludeBase.TList<Integer> classic(final Lazy<Integer> arg$1) {
  return PreludeBase.TList.DCons.<Integer>mk(
            arg$1,
            PreludeBase.TList.DCons.<Integer>mk(
                  Thunk.<Integer>shared(new Lazy.D<Integer>() {public Integer call() {return 80 - (int)arg$1.call();}}),
                  PreludeBase.TList.DList.<Integer>mk()
                )
          );
}
final public static Lazy<PreludeBase.TList<
  PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
>> layouts = Thunk.<
  PreludeBase.TList<PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>>
>shared(
      new Lazy.D<PreludeBase.TList<PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>>>() {
        public PreludeBase.TList<
          PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
        > call() {
          return PreludeBase.TList.DCons.<
                PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
              >mk(
                    PreludeBase.TTuple2.<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>mk(
                          Thunk.<String/*<Character>*/>lazy("classic"),
                          new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                            public Lazy<PreludeBase.TList<Integer>> apply(final Lazy<Integer> Œ∑$10295) {
                              return Thunk.<PreludeBase.TList<Integer>>shared(
                                        new Lazy.D<PreludeBase.TList<Integer>>() {
                                          public PreludeBase.TList<Integer> call() {
                                            return Layout.classic(Œ∑$10295);
                                          }
                                        }
                                      );
                            }
                          }
                        ),
                    PreludeBase.TList.DCons.<
                      PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                    >mk(
                          PreludeBase.TTuple2.<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>mk(
                                Thunk.<String/*<Character>*/>lazy("leftRight"),
                                new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                  public Lazy<PreludeBase.TList<Integer>> apply(final Lazy<Integer> Œ∑$10296) {
                                    return Thunk.<PreludeBase.TList<Integer>>shared(
                                              new Lazy.D<PreludeBase.TList<Integer>>() {
                                                public PreludeBase.TList<Integer> call() {
                                                  return Layout.leftRight(Œ∑$10296);
                                                }
                                              }
                                            );
                                  }
                                }
                              ),
                          PreludeBase.TList.DCons.<
                            PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                          >mk(
                                PreludeBase.TTuple2.<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>mk(
                                      Thunk.<String/*<Character>*/>lazy("leftRightUpDown"),
                                      new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                        public Lazy<PreludeBase.TList<Integer>> apply(
                                          final Lazy<Integer> Œ∑$10297
                                        ) {
                                          return Thunk.<PreludeBase.TList<Integer>>shared(
                                                    new Lazy.D<PreludeBase.TList<Integer>>() {
                                                      public PreludeBase.TList<Integer> call() {
                                                        return Layout.leftRightUpDown(
                                                                  Œ∑$10297
                                                                );
                                                      }
                                                    }
                                                  );
                                        }
                                      }
                                    ),
                                PreludeBase.TList.DCons.<
                                  PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                                >mk(
                                      PreludeBase.TTuple2.<
                                        String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                      >mk(
                                            Thunk.<String/*<Character>*/>lazy("identicalSquares"),
                                            new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                              public Lazy<PreludeBase.TList<Integer>> apply(
                                                final Lazy<Integer> Œ∑$10298
                                              ) {
                                                return Thunk.<PreludeBase.TList<Integer>>shared(
                                                          new Lazy.D<PreludeBase.TList<
                                                            Integer
                                                          >>() {
                                                            public PreludeBase.TList<Integer> call() {
                                                              return Layout.identicalSquares(
                                                                        (int)Œ∑$10298.call()
                                                                      );
                                                            }
                                                          }
                                                        );
                                              }
                                            }
                                          ),
                                      PreludeBase.TList.DCons.<
                                        PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                                      >mk(
                                            PreludeBase.TTuple2.<
                                              String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                            >mk(
                                                  Thunk.<String/*<Character>*/>lazy("spinny"),
                                                  new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                                    public Lazy<PreludeBase.TList<Integer>> apply(
                                                      final Lazy<Integer> Œ∑$10299
                                                    ) {
                                                      return Thunk.<PreludeBase.TList<Integer>>shared(
                                                                new Lazy.D<PreludeBase.TList<
                                                                  Integer
                                                                >>() {
                                                                  public PreludeBase.TList<
                                                                    Integer
                                                                  > call() {
                                                                    return Layout.spinny(
                                                                              Œ∑$10299
                                                                            );
                                                                  }
                                                                }
                                                              );
                                                    }
                                                  }
                                                ),
                                            PreludeBase.TList.DCons.<
                                              PreludeBase.TTuple2<
                                                String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                              >
                                            >mk(
                                                  PreludeBase.TTuple2.<
                                                    String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                                  >mk(
                                                        Thunk.<String/*<Character>*/>lazy(
                                                              "random"
                                                            ),
                                                        new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                                          public Lazy<PreludeBase.TList<
                                                            Integer
                                                          >> apply(final Lazy<Integer> Œ∑$10300) {
                                                            return Thunk.<PreludeBase.TList<Integer>>shared(
                                                                      new Lazy.D<PreludeBase.TList<
                                                                        Integer
                                                                      >>() {
                                                                        public PreludeBase.TList<
                                                                          Integer
                                                                        > call() {
                                                                          return Layout.random(
                                                                                    Œ∑$10300
                                                                                  );
                                                                        }
                                                                      }
                                                                    );
                                                          }
                                                        }
                                                      ),
                                                  PreludeBase.TList.DCons.<
                                                    PreludeBase.TTuple2<
                                                      String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                                    >
                                                  >mk(
                                                        PreludeBase.TTuple2.<
                                                          String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                                        >mk(
                                                              Thunk.<String/*<Character>*/>lazy(
                                                                    "diagonal"
                                                                  ),
                                                              new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                                                public Lazy<PreludeBase.TList<
                                                                  Integer
                                                                >> apply(final Lazy<Integer> Œ∑$10301) {
                                                                  return Thunk.<PreludeBase.TList<Integer>>shared(
                                                                            new Lazy.D<PreludeBase.TList<
                                                                              Integer
                                                                            >>() {
                                                                              public PreludeBase.TList<
                                                                                Integer
                                                                              > call() {
                                                                                return Layout.diagonal(
                                                                                          Œ∑$10301
                                                                                        );
                                                                              }
                                                                            }
                                                                          );
                                                                }
                                                              }
                                                            ),
                                                        PreludeBase.TList.DCons.<
                                                          PreludeBase.TTuple2<
                                                            String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                                          >
                                                        >mk(
                                                              PreludeBase.TTuple2.<
                                                                String/*<Character>*/,
                                                                Func.U<Integer, PreludeBase.TList<Integer>>
                                                              >mk(
                                                                    Thunk.<String/*<Character>*/>lazy(
                                                                          "doubleDiagonal"
                                                                        ),
                                                                    new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                                                      public Lazy<PreludeBase.TList<
                                                                        Integer
                                                                      >> apply(final Lazy<Integer> Œ∑$10302) {
                                                                        return Thunk.<
                                                                              PreludeBase.TList<
                                                                                Integer
                                                                              >
                                                                            >shared(
                                                                                  new Lazy.D<PreludeBase.TList<
                                                                                    Integer
                                                                                  >>() {
                                                                                    public PreludeBase.TList<
                                                                                      Integer
                                                                                    > call() {
                                                                                      return Layout.doubleDiagonal(
                                                                                                Œ∑$10302
                                                                                              );
                                                                                    }
                                                                                  }
                                                                                );
                                                                      }
                                                                    }
                                                                  ),
                                                              PreludeBase.TList.DCons.<
                                                                PreludeBase.TTuple2<
                                                                  String/*<Character>*/,
                                                                  Func.U<Integer, PreludeBase.TList<Integer>>
                                                                >
                                                              >mk(
                                                                    PreludeBase.TTuple2.<
                                                                      String/*<Character>*/,
                                                                      Func.U<Integer, PreludeBase.TList<Integer>>
                                                                    >mk(
                                                                          Thunk.<String/*<Character>*/>lazy(
                                                                                "wtf"
                                                                              ),
                                                                          new Func.U.D<
                                                                            Integer, PreludeBase.TList<Integer>
                                                                          >() {
                                                                            public Lazy<PreludeBase.TList<
                                                                              Integer
                                                                            >> apply(final Lazy<Integer> Œ∑$10303) {
                                                                              return Thunk.<
                                                                                    PreludeBase.TList<
                                                                                      Integer
                                                                                    >
                                                                                  >shared(
                                                                                        new Lazy.D<PreludeBase.TList<
                                                                                          Integer
                                                                                        >>() {
                                                                                          public PreludeBase.TList<
                                                                                            Integer
                                                                                          > call() {
                                                                                            return Layout.wtf(
                                                                                                      Œ∑$10303
                                                                                                    );
                                                                                          }
                                                                                        }
                                                                                      );
                                                                            }
                                                                          }
                                                                        ),
                                                                    PreludeBase.TList.DCons.<
                                                                      PreludeBase.TTuple2<
                                                                        String/*<Character>*/,
                                                                        Func.U<Integer, PreludeBase.TList<Integer>>
                                                                      >
                                                                    >mk(
                                                                          PreludeBase.TTuple2.<
                                                                            String/*<Character>*/,
                                                                            Func.U<Integer, PreludeBase.TList<Integer>>
                                                                          >mk(
                                                                                Thunk.<
                                                                                  String/*
                                                                                    <Character>
                                                                                  */
                                                                                >lazy(
                                                                                      "wtf2"
                                                                                    ),
                                                                                new Func.U.D<
                                                                                  Integer, PreludeBase.TList<Integer>
                                                                                >() {
                                                                                  public Lazy<PreludeBase.TList<
                                                                                    Integer
                                                                                  >> apply(
                                                                                    final Lazy<Integer> Œ∑$10304
                                                                                  ) {
                                                                                    return Thunk.<
                                                                                          PreludeBase.TList<
                                                                                            Integer
                                                                                          >
                                                                                        >shared(
                                                                                              new Lazy.D<PreludeBase.TList<
                                                                                                Integer
                                                                                              >>() {
                                                                                                public PreludeBase.TList<
                                                                                                  Integer
                                                                                                > call() {
                                                                                                  return Layout.wtf2(
                                                                                                            Œ∑$10304
                                                                                                          );
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                  }
                                                                                }
                                                                              ),
                                                                          PreludeBase.TList.DList.<
                                                                            PreludeBase.TTuple2<
                                                                              String/*<Character>*/,
                                                                              Func.U<Integer, PreludeBase.TList<Integer>>
                                                                            >
                                                                          >mk()
                                                                        )
                                                                  )
                                                            )
                                                      )
                                                )
                                          )
                                    )
                              )
                        )
                  );
        }
      }
    );
final public static Lazy<PreludeBase.TList<String/*<Character>*/>> getLayoutStrings =
Thunk.<PreludeBase.TList<String/*<Character>*/>>shared(
      new Lazy.D<PreludeBase.TList<String/*<Character>*/>>() {
        public PreludeBase.TList<String/*<Character>*/> call() {
          return PreludeList.<
                String/*<Character>*/, PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
              >map(
                    new Func.U.D<
                      PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>,
                      String/*<Character>*/
                    >() {
                      public Lazy<String/*<Character>*/> apply(
                        final Lazy<PreludeBase.TTuple2<
                          String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                        >> Œ∑$10305
                      ) {
                        return Thunk.<String/*<Character>*/>shared(
                                  new Lazy.D<String/*<Character>*/>() {
                                    public String/*<Character>*/ call() {
                                      return PreludeBase.<
                                            String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>
                                          >fst(Œ∑$10305.call());
                                    }
                                  }
                                );
                      }
                    },
                    Layout.layouts.call()
                  );
        }
      }
    );
final public static PreludeBase.TMaybe<PreludeBase.TList<PreludeBase.TList<Integer>>> getLayout(
  final String/*<Character>*/ arg$1
) {
  final Lazy<HashMap.THashMap<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>> layoutMap$9648 =
  Thunk.<HashMap.THashMap<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>>shared(
        new Lazy.D<HashMap.THashMap<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>>() {
          public HashMap.THashMap<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>> call() {
            final class Let$10306  {
              final Let$10306 let$10306 = this;
              final public PreludeBase.TList<
                PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
              > $lc999$9650(
                final PreludeBase.TList<
                  PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                > arg$2
              ) {
                final PreludeBase.TList.DCons<
                  PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                > $10307 = arg$2.asCons();
                if ($10307 != null) {
                  final PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>> $10308 =
                  $10307.mem1.call();
                  return PreludeBase.<
                        PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                      >$excl$colon(
                            PreludeBase.TTuple2.<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>mk(
                                  Thunk.<String/*<Character>*/>shared(
                                        new Lazy.D<String/*<Character>*/>() {
                                          public String/*<Character>*/ call() {
                                            return Layout.toLower($10308.mem1.call());
                                          }
                                        }
                                      ),
                                  $10308.mem2
                                ),
                            Thunk.<
                              PreludeBase.TList<
                                PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                              >
                            >shared(
                                  new Lazy.D<PreludeBase.TList<
                                    PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                                  >>() {
                                    public PreludeBase.TList<
                                      PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                                    > call() {
                                      return let$10306.$lc999$9650($10307.mem2.call());
                                    }
                                  }
                                )
                          );
                }
                final PreludeBase.TList.DList<
                  PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                > $10309 = arg$2.asList();
                assert $10309 != null;
                return PreludeBase.TList.DList.<
                      PreludeBase.TTuple2<String/*<Character>*/, Func.U<Integer, PreludeBase.TList<Integer>>>
                    >mk();
              }
            }
            final Let$10306 let$10306 = new Let$10306();
            return HashMap.<Func.U<Integer, PreludeBase.TList<Integer>>, String/*<Character>*/>fromList(
                      PreludeBase.IEq_String.it, let$10306.$lc999$9650(Layout.layouts.call())
                    );
          }
        }
      );
  final PreludeBase.TMaybe<Func.U<Integer, PreludeBase.TList<Integer>>> $10310 = HashMap.<
    Func.U<Integer, PreludeBase.TList<Integer>>, String/*<Character>*/
  >lookup(PreludeBase.IEq_String.it, Layout.toLower(arg$1), layoutMap$9648.call());
  final PreludeBase.TMaybe.DNothing<Func.U<Integer, PreludeBase.TList<Integer>>> $10311 =
  $10310.asNothing();
  if ($10311 != null) {
    return PreludeBase.TMaybe.DNothing.<PreludeBase.TList<PreludeBase.TList<Integer>>>mk();
  }
  final PreludeBase.TMaybe.DJust<Func.U<Integer, PreludeBase.TList<Integer>>> $10312 =
  $10310.asJust();
  assert $10312 != null;
  return PreludeBase.TMaybe.DJust.<PreludeBase.TList<PreludeBase.TList<Integer>>>mk(
            Thunk.<PreludeBase.TList<PreludeBase.TList<Integer>>>shared(
                  new Lazy.D<PreludeBase.TList<PreludeBase.TList<Integer>>>() {
                    public PreludeBase.TList<PreludeBase.TList<Integer>> call() {
                      return Layout.<PreludeBase.TList<Integer>, Integer>uniqBy(
                                PreludeBase.IOrd_Int.it,
                                new Func.U.D<PreludeBase.TList<Integer>, Integer>() {
                                  public Lazy<Integer> apply(final Lazy<PreludeBase.TList<Integer>> Œ∑$10313) {
                                    return Thunk.<Integer>shared(
                                              new Lazy.D<Integer>() {
                                                public Integer call() {
                                                  return PreludeList.<Integer>minimum(
                                                            PreludeBase.IOrd_Int.it, Œ∑$10313.call()
                                                          );
                                                }
                                              }
                                            );
                                  }
                                },
                                PreludeList.<PreludeBase.TList<Integer>, Integer>map(
                                      new Func.U.D<Integer, PreludeBase.TList<Integer>>() {
                                        public Lazy<PreludeBase.TList<Integer>> apply(
                                          final Lazy<Integer> arg$10314
                                        ) {
                                          return Thunk.<PreludeBase.TList<Integer>>shared(
                                                    new Lazy.D<PreludeBase.TList<Integer>>() {
                                                      public PreludeBase.TList<Integer> call() {
                                                        return Layout.<Integer>uniq(
                                                                  PreludeBase.IOrd_Int.it,
                                                                  $10312.mem1.call().apply(
                                                                        arg$10314
                                                                      ).call()
                                                                );
                                                      }
                                                    }
                                                  );
                                        }
                                      },
                                      PreludeBase.IEnum_Int.enumFromTo(0, 80)
                                    )
                              );
                    }
                  }
                )
          );
}

}
