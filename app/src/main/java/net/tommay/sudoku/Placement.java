/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ » ∀ ∃ ∷ … → ← ﬁ ﬂ ƒ
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.24.141
  from ./net/tommay/sudoku/Placement.fr Do not edit this file! Instead, edit the source file and recompile.
*/

package net.tommay.sudoku;

import frege.run7.Func;
import frege.run7.Lazy;
import frege.run7.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import frege.Prelude;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;
import net.tommay.sudoku.Digit;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="./net/tommay/sudoku/Placement.fr", time=1481937169443L, jmajor=1, jminor=7,
  imps={
    "net.tommay.sudoku.Digit", "frege.Prelude", "frege.prelude.PreludeArrays", "frege.prelude.PreludeBase",
    "frege.prelude.PreludeIO", "frege.prelude.PreludeList", "frege.prelude.PreludeMonad", "frege.prelude.PreludeText",
    "frege.java.util.Regex"
  },
  nmss={
    "Digit", "Prelude", "PreludeArrays", "PreludeBase", "PreludeIO", "PreludeList", "PreludeMonad",
    "PreludeText", "Regexp"
  },
  symas={}, symcs={}, symis={},
  symts={
    @Meta.SymT(
      offset=87, name=@Meta.QName(kind=0, pack="net.tommay.sudoku.Placement", base="Placement"), typ=0,
      kind=2,
      cons={
        @Meta.SymD(
          offset=99, name=@Meta.QName(kind=2, pack="net.tommay.sudoku.Placement", base="Placement", member="Placement"),
          cid=0, typ=2,
          fields={@Meta.Field(offset=0, sigma=1, strict=false), @Meta.Field(offset=0, sigma=1, strict=false)}
        )
      },
      lnks={}, funs={}, prod=true
    )
  },
  symvs={},
  symls={
    @Meta.SymL(
      offset=99, name=@Meta.QName(pack="net.tommay.sudoku.Placement", base="Placement"),
      alias=@Meta.QName(kind=2, pack="net.tommay.sudoku.Placement", base="Placement", member="Placement")
    )
  },
  taus={
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="net.tommay.sudoku.Placement", base="Placement")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}),
    @Meta.Tau(kind=9)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=0), @Meta.Rho(rhofun=false, rhotau=1), @Meta.Rho(sigma=1, rhotau=0),
    @Meta.Rho(sigma=1, rhotau=2)
  },
  sigmas={@Meta.Sigma(rho=0), @Meta.Sigma(rho=1), @Meta.Sigma(rho=3)}, exprs={@Meta.Expr()}
)
final public class Placement  {
  



final public static class TPlacement implements frege.runtime.Value, Lazy<TPlacement> {
  private TPlacement(final Lazy<Integer> arg$1, final Lazy<Integer> arg$2) {
    mem1 = Thunk.<Integer>shared(arg$1);
    mem2 = Thunk.<Integer>shared(arg$2);
  }
  final public int constructor() {
    return 0;
  }
  final public static TPlacement mk(final Lazy<Integer> arg$1, final Lazy<Integer> arg$2) {
    return new TPlacement(arg$1, arg$2);
  }
  final public Lazy<Integer> mem1  ;
  final public Lazy<Integer> mem2  ;
  final public TPlacement call() {
    return this;
  }
  final public boolean isShared() {
    return true;
  }
  final public Thunk<TPlacement> asThunk() {
    return null;
  }
  @SuppressWarnings("unchecked") final public TPlacement simsalabim() {
    return (TPlacement)this;
  }
}


}
