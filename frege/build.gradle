plugins {
  id "org.frege-lang" version "0.8"
}

// The gradle frege plugin doesn't support sourcesets.  No matter what
// anything is set to, it just compiles the code in src/main/frege.  So
// that directory is symlinked to "external" which has the source code.
// No other source directories can be added which sucks a huge rock.

// Android needs jvm 1.7.  I'm using a frege version built from
// https://github.com/Frege/frege commit
// fdd68d0ca13119522da245cf6747f0be8498239e
// with "make TARGET=1.7" which has a pull request applied that
// makes it correctly 1.7-compliant with no 1.8 code.

dependencies {
  compile files(fileTree(dir: "libs", include: "fregec-*.jar").getSingleFile())
}

compileFrege {
  optimize = true
  target = "1.7"
}

// Make an uberjar that includes the frege jar classes because it's
// easier than figuring out how to get the main project to build with
// the frege jar.  The scala plugin does it somehow . . .

jar {
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

// Delete anything we may have built while in "external".
clean {
    delete "external/build"
}
